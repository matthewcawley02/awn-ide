INCLUDES: types.awn
          ospf.awn

ALIASES:
slave := "adj(ip,sip) & ip < sip"
master := "adj(ip,sip) & sip < ip"
negotiate_slave := "(ns = ExStart) & slave & ibit"
negotiate_master := "(ns = ExStart) & master & (sqn = ddsqn) & !(ibit)"
negotiate_others := "(ns = ExStart) & !(negotiate_slave) & !(negotiate_master)"
exchange_duplicate_slave := "(ns = Exchange) & slave & (sqn <= ddsqn)"
exchange_duplicate_master := "(ns = Exchange) & master & (sqn < ddsqn)"
exchange_slave := "(ns = Exchange) & slave & (sqn = ddsqn + 1) & !(ibit)"
exchange_master := "(ns = Exchange) & master & (sqn = ddsqn) & !(ibit)"
exchange_others := "(ns = Exchange) & !(exchange_duplicate_slave) & !(exchange_duplicate_master) & !(exchange_slave) & !(exchange_master)"
load_duplicate_slave := "(ns >= Loading) & slave & (sqn <= ddsqn) & !(ibit) & dd_t >= now"
load_duplicate_master := "(ns >= Loading) & master & (sqn < ddsqn) & !(ibit)"
load_others := "(ns >= Loading) & !(load_duplicate_slave) & !(load_duplicate_slave)"

proc DBD(lsa_hdrs,sqn,ibit,sip,ip,nbrs,lsdb,hello_t) :=
  [ !(nbrExist(nbrs,sip)) ]
    OSPF(ip,nbrs,lsdb,hello_t)
  + [ genNBR(nbrs,sip) = (sip,ns,inact_t,ddsqn,dd_t,reqs,req_t,rxmts,rxmt_t) ]
  (
    [ ns = Init & !(adj(ip,sip)) ]
      [[ nbrs := setNS(nbrs,sip,2Way) ]]OSPF(ip,nbrs,lsdb,hello_t)
    + [ ns = 2Way ]
      OSPF(ip,nbrs,lsdb,hello_t)
    + [ ns = Init & adj(ip,sip) ]
      [[ nbrs := setNS(nbrs,sip,ExStart) ]][[ nbrs := incDDSQN(nbrs,sip) ]]
      [[ nbrs := setDDT(nbrs,sip,now + rxmt_intvl) ]]
      send(sndmsg(genDBD(nbrs,lsdb,sip,ip),{sip})).
      DBD(lsa_hdrs,sqn,ibit,sip,ip,nbrs,lsdb,hello_t)
    + [ negotiate_slave ]
      [[ nbrs := setNS(nbrs,sip,Exchange) ]][[ nbrs := setDDSQN(nbrs,sip,sqn) ]]
      send(sndmsg(genDBD(nbrs,lsdb,sip,ip),{sip})).OSPF(ip,nbrs,lsdb,hello_t)
    + [ negotiate_master ]
      [[ nbrs := setNS(nbrs,sip,Exchange) ]][[ nbrs := incDDSQN(nbrs,sip) ]]
      [[ nbrs := setDDT(nbrs,sip,now+rxmt_intvl) ]][[ nbrs := addREQS(nbrs,sip,lsdb,lsa_hdrs) ]]
      send(sndmsg(genDBD(nbrs,lsdb,sip,ip),{sip})).OSPF(ip,nbrs,lsdb,hello_t)
    + [ negotiate_others ]
      OSPF(ip,nbrs,lsdb,hello_t)
    + [ exchange_duplicate_slave ]
      send(sndmsg(genDBD(nbrs,lsdb,sip,ip),{sip})).OSPF(ip,nbrs,lsdb,hello_t)
    + [ exchange_slave ]
      [[ nbrs := incDDSQN(nbrs,sip) ]][[ nbrs := setDDT(nbrs,sip,now+rtdead_intvl) ]]
      [[ nbrs := addREQS(nbrs,sip,lsdb,lsa_hdrs) ]]
      send(sndmsg(genDBD(nbrs,lsdb,sip,ip),{sip})).
      (
        [ getREQS(nbrs,sip) != emptySet ]
          [[ nbrs := setNS(nbrs,sip,Loading) ]]
          OSPF(ip,nbrs,lsdb,hello_t)
        + [getREQS(nbrs,sip) = emptySet ]
          [[ nbrs := setNS(nbrs,sip,Full) ]][[ lsa := newLSA(ip,now,nbrs) ]]
          [[ lsdb := install(lsdb,{lsa}) ]][[ nbrs := updRXMTS(nbrs,{lsa}) ]]
          send(sndmsg(upd({lsa},ip),floodNIPS(nbrs))).OSPF(ip,nbrs,lsdb,hello_t)
      )
    + [ exchange_master ]
      [[ nbrs := incDDSQN(nbrs,sip) ]][[ nbrs := addREQS(nbrs,sip,lsdb,lsa_hdrs) ]]
      (
        [ getREQS(nbrs,sip) != emptySet ]
          [[ nbrs := setNS(nbrs,sip,Loading) ]] OSPF(ip,nbrs,lsdb,hello_t)
        + [getREQS(nbrs,sip) = emptySet ]
          [[ nbrs := setNS(nbrs,sip,Full) ]][[ lsa := newLSA(ip,now,nbrs) ]]
          [[ lsdb := install(lsdb,{lsa}) ]][[ nbrs := updRXMTS(nbrs,{lsa}) ]]
          send(sndmsg(upd({lsa},ip),floodNIPS(nbrs))).OSPF(ip,nbrs,lsdb,hello_t)
      )
    + [ exchange_others | load_others ]
      SNMIS(sip,ip,nbrs,lsdb,hello_t)
    + [ load_duplicate_slave ]
      send(sndmsg(genDBD(nbrs,lsdb,sip,ip),{sip})).OSPF(ip,nbrs,lsdb,hello_t)
    + [ load_duplicate_master ] OSPF(ip,nbrs,lsdb,hello_t)
  )