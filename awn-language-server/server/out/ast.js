"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.binExprs = exports.ASTKinds = void 0;
var ASTKinds;
(function (ASTKinds) {
    ASTKinds["AWNRoot"] = "AWNRoot";
    ASTKinds["Block_Include"] = "Block_Include";
    ASTKinds["Block_Type"] = "Block_Type";
    ASTKinds["Block_ConVar"] = "Block_ConVar";
    ASTKinds["Block_Function"] = "Block_Function";
    ASTKinds["Block_Process"] = "Block_Process";
    ASTKinds["Include"] = "Include";
    ASTKinds["Type"] = "Type";
    ASTKinds["ConVar"] = "ConVar";
    ASTKinds["Function_Generic"] = "Function_Generic";
    ASTKinds["Function_Infix"] = "Function_Infix";
    ASTKinds["Process"] = "Process";
    ASTKinds["TE_Brack"] = "TE_Brack";
    ASTKinds["TE_Pow"] = "TE_Pow";
    ASTKinds["TE_List"] = "TE_List";
    ASTKinds["TE_Name"] = "TE_Name";
    ASTKinds["TE_Function"] = "TE_Function";
    ASTKinds["TE_Partial"] = "TE_Partial";
    ASTKinds["TE_Product"] = "TE_Product";
    ASTKinds["BTE_Partial"] = "BTE_Partial";
    ASTKinds["BTE_Function"] = "BTE_Function";
    ASTKinds["BTE_Pow"] = "BTE_Pow";
    ASTKinds["BTE_Name"] = "BTE_Name";
    ASTKinds["BTE_List"] = "BTE_List";
    ASTKinds["BTE_Brack"] = "BTE_Brack";
    ASTKinds["SPE_Guard"] = "SPE_Guard";
    ASTKinds["SPE_Unicast"] = "SPE_Unicast";
    ASTKinds["SPE_Broadcast"] = "SPE_Broadcast";
    ASTKinds["SPE_Assign"] = "SPE_Assign";
    ASTKinds["SPE_Brack"] = "SPE_Brack";
    ASTKinds["SPE_Call"] = "SPE_Call";
    ASTKinds["SPE_Choice"] = "SPE_Choice";
    ASTKinds["SPE_Deliver"] = "SPE_Deliver";
    ASTKinds["SPE_Groupcast"] = "SPE_Groupcast";
    ASTKinds["SPE_Name"] = "SPE_Name";
    ASTKinds["SPE_Receive"] = "SPE_Receive";
    ASTKinds["SPE_Send"] = "SPE_Send";
    ASTKinds["DE_Binary"] = "DE_Binary";
    ASTKinds["DE_Brack"] = "DE_Brack";
    ASTKinds["DE_Exists"] = "DE_Exists";
    ASTKinds["DE_Forall"] = "DE_Forall";
    ASTKinds["DE_Function"] = "DE_Function";
    ASTKinds["DE_Lambda"] = "DE_Lambda";
    ASTKinds["DE_Name"] = "DE_Name";
    ASTKinds["DE_Partial"] = "DE_Partial";
    ASTKinds["DE_Set"] = "DE_Set";
    ASTKinds["DE_Singleton"] = "DE_Singleton";
    ASTKinds["DE_Tuple"] = "DE_Tuple";
})(ASTKinds || (exports.ASTKinds = ASTKinds = {}));
var binExprs;
(function (binExprs) {
    binExprs["Implicates"] = "->";
    binExprs["Iff"] = "<->";
    binExprs["And"] = "&";
    binExprs["Or"] = "|";
    binExprs["Eq"] = "=";
    binExprs["Neq"] = "!=";
    binExprs["Gtreq"] = ">=";
    binExprs["Lsreq"] = "<=";
    binExprs["Gtr"] = ">";
    binExprs["Les"] = "<";
})(binExprs || (exports.binExprs = binExprs = {}));
//# sourceMappingURL=ast.js.map